[자바의 정석 - 기초편] ch6-1 객체지향 언어
- 객체지향 언어
    - 빠른 변화에 대한 해결책으로 객체지향 언어를 도입 (절차 -> 객체지향)
    - 코드의 재사용성이 높음, 유지보수가 용이, 중복 코드 제거
    - 객체지향 언어 = 프로그래밍 언어 + 객체지향개념(규칙)
- 객체지향 핵심개념
    - 캡슐화
    - 상속
    - 추상화
    - 다형성
[자바의 정석 - 기초편] ch6-2~4 클래스와객체
    - 클래스 =  제품 설계도
    - 객체     =  제품

    - 클래스
        - 객체를 정의해 놓은 것
        - 객체를 생성하기 위해 필요함

    - 객체
        - 실제로 존재하는 것, 사물 또는 개념
        - 객체 = 속성(변수) + 기능(메서드)
        - 객체를 사용하기 위해서 필요함
        - 객체를 사용한다는 것은 객체의 속성과 기능을 사용하는 것
[자바의 정석 - 기초편] ch6-5 한파일 여러 클래스 작성하기
        - public class가 있는 경우 소스파일의 이름은 반드시 public class의 이름과 일치해야함
        (메인 메서드가 있는 클래스와 일치해야함)
        - public class 가 없는 경우 소스파일의 이름은 어느 클래스 이름과 동일해도 된다
        - 하나의 소스파일에는 하나의 클래스만 작성하는게 바람직
        - 대소문자는 구분되기 때문에 주의할 것
[자바의 정석 - 기초편] ch6-6, 7 객체의 생성과 사용
        - 객체의 생성과 사용
            - 전체적 흐름
                - ①클래스(설계도) 작성
                - ②객체 생성
                - ③객체 사용
        - 객체의 생성
            - 참조변수의 타입과 객체의 타입이 일치해야함
            - 클래스명 변수명; →클래스를 참조하기 위한 참조변수(리모콘)선언
            - 변수명 new클래스명(); →클래스의 객체 생성 후 객체주소를 참조변수에 저장
        - 순서
        ①참조변수 선언
        ②객체생성
        ③객체주소와 참조변수를 연결
        - 객체의 사용
            - 객체를 사용하려면 무조건 참조변수를 사용해서 접근
            - 참조변수.멤버변수명 = 값;
            - 참조변수.메서드명();
        - 하나의 인스턴스를 여러개의 참조변수가 가리키는건 가능
            - 하나의 참조변수가 여러개의 인스턴스들을 가리키는건 불가능
[자바의 정석 - 기초편] ch6-8 객체배열
            - ex) Tv타입 참조변수 3개 생성
            - Tv[] tvArr = new Tv[2]; (초기값은 Tv타입이 참조형이므로 null)
            - 각각의 참조변수에 tv객체 생성
                - tvArr[0] = new Tv();
                - tvArr[1] = new Tv();
                - tvArr[2] = new Tv();
                    - (객체 각각의 주소가 참조변수에 저장된다)
                    - → 위와 같은 과정을 간단히
                        - Tv[] tvArr =  { new Tv(), new Tv(), new Tv() };